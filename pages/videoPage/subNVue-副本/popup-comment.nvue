<template>
	<view class="popup-comment" id="popupComment" style="">
		<view class="header">
			<text class="header-text">共{{ data.total }}条评论</text>
			<image class="header-image" style="width: 26rpx;" src="/static/baskCooking/sy_close.png"
				mode="widthFix" @click="closePopup" />
		</view>
		<scroll-view style="" :scroll-top="scrollTop" scroll-y="true" class="scroll" @scrolltolower="">
			<view class="comment-li" v-for="(item,i) of data.comments" :key="i">
				<view class="">
					<image class="head-img" :src="item.evaluationAvatar?item.evaluationAvatar:'/static/danxiaochu.png'" mode="widthFix" lazy-load />
				</view>
				<view class="comment-li-content">
					<view class="comment-li-header">
						<text class="name" style="font-size: 24rpx; color: #808080;">{{item.evaluationName}}</text>
					</view>
					<view class="msg" style="position: relative;">
						<text style="font-size: 24rpx;">{{item.content}}</text>
						<text class="date" style="font-size: 20rpx; color: #808080;">{{parseTime(item.createTime)}}</text>
					</view>
					<!-- children -->
					<!-- <view v-if="item.children.length > 1" class="">
						<template v-if="!isSpread">
							<view class="comment-li-child" v-for="(val,index) of item.children.slice(0,1)"
								:key="index">
								<view class="">
									<image class="head-img-child" :src="val.avatarUrl" mode="widthFix" lazy-load />
								</view>
								<view class="comment-li-content-child">
									<view class="comment-li-header">
										<text class="name"
											style="font-size: 24rpx; color: #808080;">{{val.name}}</text>
									</view>
									<view class="msg" style="position: relative;">
										<text style="font-size: 24rpx;">{{val.cont}}</text>
										<text class="date"
											style="font-size: 20rpx; color: #808080;">{{item.created_time}}</text>
										<view @click="spread()" class="" style="margin-top: 20rpx;">
											<text style="color: #EFAC15; font-size: 12px;;">展开18条回复</text>
										</view>
									</view>
								</view>
							</view>
						</template>
						<template v-else>
							<view class="comment-li-child" v-for="(val,index) of item.children" :key="index">
								<view class="">
									<image class="head-img-child" :src="val.avatarUrl" mode="widthFix" lazy-load />
								</view>
								<view class="comment-li-content-child">
									<view class="comment-li-header">
										<text class="name"
											style="font-size: 24rpx; color: #808080;">{{val.name}}</text>
									</view>
									<view class="msg" style="position: relative;">
										<text style="font-size: 24rpx;">{{val.cont}}</text>
										<text class="date"
											style="font-size: 20rpx; color: #808080;">{{item.created_time}}</text>
										<view v-if="index == item.children.length-1" @click="spread()" class="" style="margin-top: 20rpx;">
											<text style="color: #EFAC15; font-size: 12px;;">收起</text>
										</view>
									</view>
								</view>
							</view>
						</template>
		
					</view> -->
					<!--  -->
					<!-- <view v-else class="comment-li-child" v-for="(val,index) of item.children" :key="index">
						<view class="">
							<image class="head-img-child" :src="val.avatarUrl" mode="widthFix" lazy-load />
						</view>
						<view class="comment-li-content-child">
							<view class="comment-li-header">
								<text class="name" style="font-size: 24rpx; color: #808080;">{{val.name}}</text>
							</view>
							<view class="msg" style="position: relative;">
								<text style="font-size: 24rpx;">{{val.cont}}</text>
								<text class="date"
									style="font-size: 20rpx; color: #808080;">{{item.created_time}}</text>
							</view>
						</view>
					</view> -->
				</view>
			</view>
			<!-- <view class="loading">{{loadingText}}</view> -->
		</scroll-view>
	</view>
</template>

<script>
	import showCooking from '@/api/showCooking/showCooking.js';
	
	export default {
		data() {
			return {
				isSpread: false,
				showCookingData:{},
				queryParams:{
					pageNum: 1,
					pageSize: 10,
				},
				data: {
					total: 888,
					commentMsg: '',
					comments: [{
							avatarUrl: '/static/baskCooking/sy_av.png',
							name: '扬州厨房',
							created_time: '03-19',
							cont: '评论评论评论评论评论评论评论评论评.',
							children: [{
									avatarUrl: '/static/baskCooking/sy_av.png',
									name: '扬州厨房',
									cont: '评论评论评论评论评论评论评论评论评论评论评论 评论评论评论评论评论评论评论评论。',
									created_time: '03-20'
								},
								{
									avatarUrl: '/static/baskCooking/sy_av.png',
									name: '扬州厨房',
									cont: '评论评论评论评论评论评论评论评论评论评论评论 评论评论评论评论评论评论评论评论。',
									created_time: '03-20'
								}
							]
						},
						{
							avatarUrl: '/static/baskCooking/sy_av.png',
							name: '扬州厨房',
							created_time: '03-19',
							cont: '评论评论评论评论评论评论评论评论评.',
							children: [{
								avatarUrl: '/static/baskCooking/sy_av.png',
								name: '扬州厨房',
								cont: '评论评论评论评论评论评论评论评论评论评论评论 评论评论评论评论评论评论评论评论。',
								created_time: '03-20'
							}]
						}
					],	
				},
			}
		},
		onLoad() {
			let that = this ;
			uni.$once('popupComment_showCookingData',function(data){
				that.showCookingData = data
				that.data.total = data.evaluationNum
				that.initEvaluationList()
			})
		},
		methods: {
			/* 初始化加载评论列表 */
			initEvaluationList(){
				let that = this 
				that.queryParams.id = this.showCookingData.id 
				showCooking.findEvaluationList(this.queryParams).then((res)=>{
					this.data.comments = res.rows
					console.log(res.rows)
				})
			},
			closePopup() {
				const popupComment = uni.getSubNVueById('popupComment');
				popupComment.hide('slide-out-bottom',200);
			},
			spread() {
				this.isSpread = !this.isSpread;
			},
			
			
			parseTime(time, pattern) {
			  if (arguments.length === 0 || !time) {
			    return null
			  }
			  const format = pattern || '{y}-{m}-{d} {h}:{i}:{s}'
			  let date
			  if (typeof time === 'object') {
			    date = time
			  } else {
			    if ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {
			      time = parseInt(time)
			    } else if (typeof time === 'string') {
			      time = time.replace(new RegExp(/-/gm), '/').replace('T', ' ').replace(new RegExp(/\.[\d]{3}/gm), '');
			    }
			    if ((typeof time === 'number') && (time.toString().length === 10)) {
			      time = time * 1000
			    }
			    date = new Date(time)
			  }
			  const formatObj = {
			    y: date.getFullYear(),
			    m: date.getMonth() + 1,
			    d: date.getDate(),
			    h: date.getHours(),
			    i: date.getMinutes(),
			    s: date.getSeconds(),
			    a: date.getDay()
			  }
			  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {
			    let value = formatObj[key]
			    // Note: getDay() returns 0 on Sunday
			    if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }
			    if (result.length > 0 && value < 10) {
			      value = '0' + value
			    }
			    return value || 0
			  })
			  return time_str
			},
			
		}
	}
</script>

<style scoped>
	.popup-comment {
		/* padding: 28rpx 30rpx; */
		width: 750rpx;
		/* height: 1000rpx; */
		background-color: #FFFFFF;
		border-radius: 20rpx 20rpx 0 0;
	}
	.header {
		width: 750rpx;
		height: 92rpx;
		/* background-color: #000000; */
		display: flex;
		align-items: center;
		justify-content: center;
		position: relative;
	}
	
	.header-text {
		font-size: 28rpx;
		font-weight: 500;
	}
	
	.header-image {
		position: absolute;
		right: 34rpx;
	}
	.scroll {
		width: 750rpx;
		/* height: 606rpx; */
		/* #ifndef APP-NVUE */
		/* height: 510rpx; */
		/* #endif */
	}
	.comment-li {
		/* display: flex; */
		flex-direction: row;
		padding: 30rpx 28rpx;
		box-sizing: border-box;
	}
	
	.comment-li-child {
		width: 580rpx;
		flex-direction: row;
		padding: 30rpx 0rpx;
		box-sizing: border-box;
		border-bottom: 0.6rpx solid #E3E3E3;
	}
	
	.head-img {
		width: 62rpx;
	}
	
	.head-img-child {
		width: 38rpx;
	}
	
	.comment-li-header {
		margin-bottom: 8rpx;
	}
	
	.comment-li-content {
		margin-left: 20rpx;
		width: 528rpx;
		position: relative;
	}
	
	.comment-li-content-child {
		margin-left: 10rpx;
		width: 528rpx;
		position: relative;
	}
</style>
