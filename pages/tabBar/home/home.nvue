<template>
	<view class="home-container" @touchmove="handletouchstart" @touchend="handletouchend"
		@touchcancel="handletouchcancel">
		<!-- <u-sticky offset-top="0" customNavHeight="0">
			<view class="" style="">
				<view class="" style="width: 750rpx; height: 160rpx;">
					
				</view>
				<text style="background-color: #FFFFFF;">塞下秋来风景异，衡阳雁去无留意</text>
			</view>
		</u-sticky> -->
		<!-- 背景 -->
		<image class="bcg" src="../../../static/homeBcg.png" mode=""></image>
		<!--  -->
		<uni-transition mode-class="fade" :duration="200" :show="show"
			style=" background-color: #F5F5F5; position: fixed; top: 0; z-index: 9999; width: 750rpx;">
			<view class="" style="padding-left: 22rpx; padding-top: 44rpx; padding-right: 22rpx;">
				<view class="search_" @click="gotoIndex('')" style="background-color: #FFFFFF; margin-bottom: 20rpx">
					<image style="width: 26rpx; height: 28rpx; margin-left: 20rpx; margin-right: 16rpx;"
						src="../../../static/search.png" mode=""></image>
					<text class="search-text">{{ historyDataOne }}</text>
				</view>
			</view>
		</uni-transition>
		<!-- 定位 搜索 广告 -->
		<view class="module_1">
			<view class="position_" @click="chooseLocation()">
				<view class="position_left">
					<!-- <text class="position_left-text">蛋小厨</text> -->
					<image style="width: 120rpx;" src="../../../static/homeLogo.png" mode="widthFix"></image>
				</view>
				<view class="position_right">
					<image style="width: 20rpx; margin-right: 10rpx;" mode="widthFix"
						src="../../../static/position.png">
					</image>
					<text class="position-text">{{ myLocation }}</text>
					<image style="width: 10rpx; height: 14rpx; margin-left: 16rpx;" src="../../../static/right.png">
					</image>
				</view>
			</view>
			<!-- ------需要吸顶------- -->
			<view class="search_" @click="gotoIndex('')">
				<image style="width: 26rpx; height: 28rpx; margin-left: 20rpx; margin-right: 16rpx;"
					src="../../../static/search.png" mode=""></image>
				<!-- <text class="search-text">杏园茶坊</text> -->
				<text class="search-text">{{ historyDataOne }}</text>
				<!-- <view class="search-btn">
					<text class="search-btn-text">搜索</text>
				</view> -->
			</view>
			<scroll-view scroll-x="true" style="flex-direction: row;">
				<view class="history-lists">
					<view class="lists-item" v-for="(item,index) in historyData" :key="index"
						@click="gotoIndex(item.searchValue)">
						<text class="lists-item-text">{{ item.searchValue }}</text>
					</view>
				</view>
			</scroll-view>
			<view class="banner_">
				<swiper v-if="!isLoading1" class="banner_swiper" :indicator-dots="indicatorDots"
					:indicator-color="indicatorColor" :indicator-active-color="indicatorActiveColor"
					:autoplay="autoplay" :interval="interval" :duration="duration" :circular="circular">
					<swiper-item v-for="(item,index) in bannerData" v-if="item.bannerType == 1 && item.status"
						:key="index" @click="toAdvert(item)">
						<view class="">
							<image style="width: 706rpx; height: 286rpx" :src="item.imgUrl" mode=""></image>
						</view>
					</swiper-item>
				</swiper>
				<!-- <image v-else style="width: 288rpx; height: 286rpx; margin-left: 209rpx" src="../../../static/loading1.gif"
					mode="widthFix"></image> -->
			</view>
		</view>
		<!-- 种类 -->
		<view class="module_2">
			<view class="types-Row1">
				<view class="types-item" v-for="(item,index) in typesData1" :key="index"
					@click="gotoOptions(index, item)">
					<image style="width: 112rpx; height: 116rpx; margin-bottom: 12rpx;" :src="item.picUrl" mode="">
					</image>
					<text class="types-item-text">{{ item.name }}</text>
				</view>
			</view>
			<!-- <view class="type-Row2">
				<view class="types-item" v-for="(item,index) in typesData2" :key="index" @click="gotoOptions2(index)">
					<image style="width: 54rpx; height: 44rpx; margin-bottom: 12rpx;" :src="item.picUrl" mode=""></image>
					<text class="types-item-text">{{ item.name }}</text>
				</view>
			</view> -->
		</view>
		<u-sticky offset-top="0" customNavHeight="0">
			<view class="module_2" style="padding-top: 38rpx; padding-bottom: 28rpx;">
				<view class="type-Row2">
					<view class="types-item" v-for="(item,index) in typesData2" :key="index"
						@click="gotoOptions2(index, item)">
						<image style="width: 54rpx; height: 44rpx; margin-bottom: 12rpx;" :src="item.picUrl" mode="">
						</image>
						<text class="types-item-text">{{ item.name }}</text>
					</view>
				</view>
			</view>
			<!-- 条件筛选 需要吸顶 -->
			<!-- <view class="" style="width: 750rpx; height: 40rpx; border-bottom: 1px solid #F5F5F5; background-color: #F5F5F5;"></view> -->
			<view class="module_3 ">
				<scroll-view :show-scrollbar="false" scroll-x="true"
					style="flex-direction: row; padding-bottom: 16rpx;">
					<view class="filter_">
						<template v-for="(item,index) in filterData">
							<view class="filter-item"
								:class="{'filter-item-active': item.state, 'filter-item-last': index == filterData.length - 1}"
								@click="filterItem(item)">
								<text class="filter-item-text"
									:class="{'filter-itemtext-active': item.state}">{{ item.name }}</text>
							</view>
						</template>
					</view>
				</scroll-view>
				<view class="filter-icon" @click="toggleTizhi('center')">
					<text style="color: #56575B;font-size: 13px;margin-right: 8rpx">筛选</text>
					<image style="width: 24rpx;height: 24rpx;" src="../../../static/shaixuan.png" mode="aspectFit">
					</image>
					<image style="width: 16rpx;height: 16rpx;" src="../../../static/shaixuan_xiala.png"
						mode="aspectFit"></image>
				</view>
			</view>
		</u-sticky>
		<!-- 列表 -->
		<view class="module_4">
			<goods-list v-if="!isLoading2" :shopList="shopList"></goods-list>
			<!-- <image v-else style="width: 288rpx; height: 286rpx; margin-left: 209rpx;" src="../../../static/loading1.gif"
				mode="widthFix"></image> -->
			<view v-if="!isLoading2" class="isBottom">
				<text class="isBottom-leftLine"></text>
				<text v-if="shopList.length >= shopTotal" class="isBottom-text">已经到底啦</text>
				<text v-else class="isBottom-text">加载中...</text>
				<text class="isBottom-rightLine"></text>
			</view>
		</view>
		<!-- 购物车 -->
		<!-- <view class="bdjg-gouwuche" ref="gwc" :class="specClass">
			<image @click="gotoShopCar()" class="gouwuche-img" src="../../../static/bdjg_gouwuche.png" mode=""></image>
		</view> -->

		<uni-popup ref="alertDialog" type="dialog" style="z-index: 9999">
			<uni-popup-dialog type="info" cancelText="关闭" confirmText="同意" title="" :content="returnMsg"
				@confirm="dialogConfirm" @close="dialogClose"></uni-popup-dialog>
		</uni-popup>

		<!-- 小米权限确认弹框 -->
		<uni-popup ref="xiaomiPopup" type="dialog" style="z-index: 9999">
			<uni-popup-dialog type="warn" title="获取位置信息" cancelText="拒绝" confirmText="去开启"
				content="蛋小厨需要获取您的位置信息用于推荐附件美食!" @confirm="xiaomidialogConfirm"
				@close="xiaomidialogClose"></uni-popup-dialog>
		</uni-popup>


		<!-- 体质弹窗 -->
		<uni-popup ref="tzSearchDialog" background-color="transparent" @change="popupChange" style="z-index: 9999999;">
			<view class="tzSearch-content">
				<image class="tz-close" src="/static/baskCooking/sy_close.png" mode="widthFix" @click="closeTzPop">
				</image>
				<view class="category-name">
					<text class="tz-line"></text>
					<text class="tz-text">适用体质</text>
					<text class="tz-line"></text>
				</view>
				<scroll-view scroll-y="true" style="height: 660rpx; padding: 22rpx 0 22rpx 22rpx;">
					<view class="" style="flex-direction: row; flex-wrap: wrap;">
						<view class="tz-item" v-for="(item, index) in tzList" :key="index + $attrs"
							@click="onTzItem(item)">
							<text class="tz-item-text"
								:class="item.tmp_flag?'tz-item-text-a':''">{{ item.constitution }}</text>
							<!-- tmp_flag -->
						</view>
					</view>
				</scroll-view>
			</view>
		</uni-popup>
		<!-- 是否登录浮窗 -->
		<view v-if="!isLogin" class="isLogin-float">
			<text class="isLogin-float-text">终于等到你 ! (●'◡'●) 快来登录吧~</text>
			<view class="login-btn" @click="toLogin">
				<text class="login-btn-text">马上登录</text>
			</view>
		</view>
		<!-- 下载进度 -->
		<uni-popup ref="progressPopup" background-color="transparent" :mask-click="false"
			style="border-radius: 50rpx; overflow: hidden; z-index: 999999;">
			<view class="popup-content">
				<text class="popup-content-tit">升级APP</text>
				<text class="popup-content-cont">正在为您更新，请耐心等待</text>
				<text class="popup-content-progress">已下载{{ progress }}%</text>
				<view class="popup-content-progress-box">
					<progress :percent="progress" activeColor="#10AEFF" stroke-width="10" :active="false" />
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	const animation = uni.requireNativePlugin('animation')
	import userClient from '@/api/userClient.js';
	import goodsList from '@/components/goodslist/goodslist.vue';
	// import sRegionSlider from '@/components/s-region-slider/s-region-slider.vue'

	import shop from '@/api/shop/shop.js'; // 引入api
	import search from '@/api/search/search.js';
	import file from '@/api/file/file.js'
	import login from '@/api/login/login.js'
	import * as util from '@/common/util.js'
	var returnIP = util.returnIP;

	export default {
		components: {
			goodsList
		},
		data() {
			return {
				isLogin: true,
				downloadTask: null,
				progress: 0,
				specClass: 'hide',
				isLoading1: true,
				isLoading2: true,
				myLocation: '正在定位...',
				returnMsg: '',
				scrollTop: 0,
				show: false,
				show2: false,
				styles: {
					'width': '100px',
					'height': '100px',
					'backgroundColor': 'red'
				},
				historyData: [],
				historyDataOne: '杏园茶坊',
				bannerData: [],
				indicatorDots: true,
				indicatorColor: '#ffffff',
				indicatorActiveColor: '#efeff4',
				autoplay: true,
				interval: 4000,
				duration: 1000, // app-nvue不支持
				circular: true,
				typesData1: [{
						"name": "美食",
						"picUrl": "../../../static/meishi.png",
						"id": "32eefa57f384ab5c41f96292bf63cdff",
					},
					{
						"name": "预制菜",
						"picUrl": "../../../static/yuzhicai.png",
						"id": "c399993fb08aad71b2119f0b15de77ad",
					},
					{
						"name": "素食主义",
						"picUrl": "../../../static/sushizhuyi.png",
						"id": "08f13873bd1481b984f3bb8e41f4e8a7",
					},
					{
						"name": "甜点饮品",
						"picUrl": "../../../static/tianyin.png",
						"id": "4eb7288c7b870b6cba91fc33df733085",
					}
				],
				typesData2: [{
						"name": "预约订座",
						"picUrl": "../../../static/yuyue.png"
					},
					{
						"name": "热门菜谱",
						"picUrl": "../../../static/caipu.png"

					},
					{
						"name": "商家自制",
						"picUrl": "../../../static/dingzhi.png"

					},
					// {
					// 	"name": "晒厨艺",
					// 	"picUrl": "../../../static/shaichuyi.png"
					// },
					{
						"name": "孕食辅餐",
						"picUrl": "../../../static/yunshi.png"
					}
				],
				filterData: [{
						"name": "距离最近",
						"state": true,
						"id": 1
					},
					/* {
						"name": "起送最低",
						"state": false,
						"id": 2
					},
					{
						"name": "人均最高",
						"state": false,
						"id": 3
					},
					{
						"name": "人均最低",
						"state": false,
						"id": 4
					}, */
					{
						"name": "销量最高",
						"state": false,
						"id": 5
					},
					{
						"name": "评分最高",
						"state": false,
						"id": 7
					}
				],
				shopList: [],
				shopTotal: null,
				listPortForm: {
					pageNum: 1,
					pageSize: 10,
					searchValue: '',
					shopTypeId: '',
					latitude: uni.getStorageSync('location_key').latitude,
					longitude: uni.getStorageSync('location_key').longitude,
					sortType: '1',
					nutritionValue: ''
				},
				tzList: [{
					constitution: "全部",
					id: "",
					ingredients: "",
					tmp_flag: null
				}]
			}
		},
		created() {},
		mounted() {},
		methods: {
			// 获取个人信息
			getUser() {
				if(!uni.getStorageSync('token_key')){
					this.isLogin = false;
					return;
				}
				login.getUser().then(res => {
					if (res.code == 200) {
						this.isLogin = true;
					} else {
						this.isLogin = false;
					}
				}).catch(err => {
					uni.showToast({
						title: err.msg,
						icon: 'none'
					})
				});
			},
			// 判断是否最新版本
			checkNewVersion(versionCode) {
				let that = this;
				file.checkVersion().then(data => {
					let version;
					if (uni.getSystemInfoSync().platform === 'ios') {
						version = data.data.iosVersion;
					} else {
						version = data.data.androidVersion;
					}
					if (versionCode < version) {
						uni.showModal({
							title: "发现新版本",
							content: "确认下载更新",
							showCancel: false,
							success: (res) => {
								if (res.confirm == true) { //当用户确定更新，执行更新
									let url = '';
									if (uni.getSystemInfoSync().platform === 'ios') {
										url = data.data.iosUrl;
										plus.runtime.openURL(url);
									} else {
										uni.hideTabBar();
										url = data.data.androidUrl;
										that.appdownLoad(url);
									}
								} else {
									if (uni.getSystemInfoSync().platform === 'ios') {
										plus.ios.import("UIApplication").sharedApplication()
											.performSelector("exit")
									} else {
										plus.runtime.quit();
									}
								}
							}
						})
					} else {
						// that.$nextTick(() => {
						if (!uni.getStorageSync('location_key').latitude  && !uni.getStorageSync('openlocation_key')) {
							//that.$refs.xiaomiPopup.open()
							uni.showModal({
								title: '获取位置信息',
								content: '蛋小厨需要获取您的位置信息用于推荐附件美食',
								confirmText: '去设置',
								cancelText: '拒绝',
								success: function(res) {
									if (res.confirm) {
										// console.log('用户点击确定');
										that.initLocation()
								 } else if (res.cancel) {
										// console.log('用户点击取消');
										uni.setStorageSync('openlocation_key', true);
								 }
								}
							});
						} else {
							that.myLocation = uni.getStorageSync('location_key').address
							// console.log(uni.getStorageSync('location_key'))
						}
						// })
						//that.initLocation();
						that.initCid();
						that.getConstitutionIngredients();
						// that.getShopList();    // 放入initlocation（）内
						// uni.reLaunch({
						// 	url: ''
						// });
						// #ifdef H5
						// that.getShopList();
						that.findHotSearch(1, 6);
						// #endif
						if (uni.getStorageSync('token_key')) {
							that.initBadge();
							that.setPush();
						}
					}
				}).catch(err => {
					console.log('err==>', err);
				});
			},
			appdownLoad(url) {
				let that = this;
				that.$refs.progressPopup.open('center');
				that.downloadTask = uni.downloadFile({ //执行下载
					url, //下载地址
					success: downloadResult => { //下载成功
						that.$refs.progressPopup.close();
						if (downloadResult.statusCode == 200) {
							uni.showModal({
								title: '',
								content: '下载新版本成功，确定现在安装吗？',
								confirmText: '去安装',
								confirmColor: '#EE8F57',
								showCancel: false,
								success: function(res) {
									if (res.confirm == true) {
										plus.runtime.install( //安装
											downloadResult.tempFilePath, {
												force: true
											},
											function(res) {
												utils.showToast('安装成功，重启中');
												// uni.showTabBar();
												plus.runtime.restart();
											}
										);
									}
								}
							});
						}
					}
				});
				that.downloadTask.onProgressUpdate((res) => {
					// console.log('下载进度' + res.progress);
					that.progress = res.progress;
				});
			},
			toLogin() {
				uni.navigateTo({
					url: '/pages/login/login',
				});
			},
			//开启通知
			openTongZhi() { //弹窗按钮绑定方法
				let platform = uni.getSystemInfoSync().platform; //获取安卓还是ios
				this.tongzhi = false;
				if (platform == "ios") { //如果机型是ios，ios由于权限问题，可能需要手动开启
					var UIApplication = plus.ios.import("UIApplication");
					var app = UIApplication.sharedApplication();
					var settings = app.currentUserNotificationSettings();
					enabledTypes = settings.plusGetAttribute("types");
					var NSURL2 = plus.ios.import("NSURL");
					var setting2 = NSURL2.URLWithString("app-settings:");
					var application2 = UIApplication.sharedApplication();
					application2.openURL(setting2);
					plus.ios.deleteObject(setting2);
					plus.ios.deleteObject(NSURL2);
					plus.ios.deleteObject(application2);
					plus.ios.deleteObject(settings);
				} else if (platform == "android") { //如果机型是安卓
					var main = plus.android.runtimeMainActivity();
					var pkName = main.getPackageName();
					var uid = main.getApplicationInfo().plusGetAttribute("uid");
					var Intent = plus.android.importClass("android.content.Intent");
					var Build = plus.android.importClass("android.os.Build");
					//android 8.0引导
					if (Build.VERSION.SDK_INT >= 26) { //判断安卓系统版本
						var intent = new Intent("android.settings.APP_NOTIFICATION_SETTINGS");
						intent.putExtra("android.provider.extra.APP_PACKAGE", pkName);
					} else if (Build.VERSION.SDK_INT >= 21) { //判断安卓系统版本
						//android 5.0-7.0
						var intent = new Intent("android.settings.APP_NOTIFICATION_SETTINGS");
						intent.putExtra("app_package", pkName);
						intent.putExtra("app_uid", uid);
					} else {
						//(<21)其他--跳转到该应用管理的详情页
						intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
						var uri = Uri.fromParts(
							"package",
							mainActivity.getPackageName(),
							null
						);
						intent.setData(uri);
					}
					// 跳转到该应用的系统通知设置页
					main.startActivity(intent);
				}
			},
			setPush() {
				let that = this
				let platform = uni.getSystemInfoSync().platform; //首先判断app是安卓还是ios
				console.log(platform);
				if (platform == "ios") { //这里是ios的方法
					/* console.log("我是iOS");
					var UIApplication = plus.ios.import("UIApplication");
					var app = UIApplication.sharedApplication();
					var enabledTypes = 0;
					if (app.currentUserNotificationSettings) {
						var settings = app.currentUserNotificationSettings();
						enabledTypes = settings.plusGetAttribute("types");
						console.log("enabledTypes1:" + enabledTypes);
						if (enabledTypes == 0) { //如果enabledTypes = 0 就是通知权限没有开启
							this.tongzhi = true; //这里是我写的一个弹窗上面有一个跳转开启的按钮，自行添加即可
							uni.showModal({
							    title: '消息通知',  
							    content: '是否打开消息通知权限，用于接收订单实时状态',  
							    showCancel: true,  
							    success: function (res) {  
									that.openTongZhi()
							    }  
							}); 
						}
					}
					plus.ios.deleteObject(settings); */
				} else if (platform == "android") { //下面是安卓的方法
					console.log("我是安卓", plus.android);
					var main = plus.android.runtimeMainActivity();
					var pkName = main.getPackageName();
					var uid = main.getApplicationInfo().plusGetAttribute("uid");
					var NotificationManagerCompat = plus.android.importClass(
						"android.support.v4.app.NotificationManagerCompat"
					);
					//android.support.v4升级为androidx
					if (NotificationManagerCompat == null) {
						NotificationManagerCompat = plus.android.importClass(
							"androidx.core.app.NotificationManagerCompat"
						);
					}
					var areNotificationsEnabled =
						NotificationManagerCompat.from(main).areNotificationsEnabled();
					// 未开通‘允许通知’权限，则弹窗提醒开通，并点击确认后，跳转到系统设置页面进行设置
					console.log(areNotificationsEnabled)
					if (!areNotificationsEnabled) {
						this.tongzhi = true; //这里也一样未开启权限，弹出弹窗
						uni.showModal({
							title: '消息通知',
							content: '是否打开消息通知权限，用于接收订单实时状态',
							showCancel: true,
							success: function(res) {
								that.openTongZhi()
							}
						});
					}
				}
			},
			/* 引导用户设置消息推送 */
			setPush11() {
				console.log(uni.getSystemInfoSync().platform)
				console.log('111111111111')
				if (uni.getSystemInfoSync().platform === 'ios') {
					var UIApplication = plus.ios.import("UIApplication");
					var app = UIApplication.sharedApplication();
					var enabledTypes = 0;
					if (app.currentUserNotificationSettings) {
						var settings = app.currentUserNotificationSettings();
						enabledTypes = settings.plusGetAttribute("types");
					} else {
						//针对低版本ios系统  
						enabledTypes = app.enabledRemoteNotificationTypes();
					}
					plus.ios.deleteObject(app);
					if (0 == enabledTypes) {
						uni.showModal({
							title: '提示',
							content: '请先打开APP通知权限',
							showCancel: true,
							success: function(res) {
								if (res.confirm) {
									var UIApplication = plus.ios.import("UIApplication");
									var NSURL = plus.ios.import("NSURL");
									var setting = NSURL.URLWithString("app-settings:");
									var application = UIApplication.sharedApplication();
									application.openURL(setting);
									plus.ios.deleteObject(setting);
									plus.ios.deleteObject(application);
								}
							}
						});
					}
				} else {
					var main = plus.android.runtimeMainActivity();
					var pkName = main.getPackageName();
					var NotificationManagerCompat = plus.android.importClass(
						"android.support.v4.app.NotificationManagerCompat");
					var packageNames = NotificationManagerCompat.from(main);
					console.log(JSON.stringify(packageNames));
					if (packageNames.areNotificationsEnabled()) {
					 console.log('已开启通知权限');
					} else {
						uni.showModal({
							title: '提示',
							content: '请先打开APP通知权限',
							showCancel: true,
							success: function(res) {
								if (res.confirm) {
									var Intent = plus.android.importClass('android.content.Intent');
									var intent = new Intent(
									'android.settings.APP_NOTIFICATION_SETTINGS'); //可设置表中所有Action字段  
									intent.putExtra('android.provider.extra.APP_PACKAGE', pkName);
									main.startActivity(intent);
								}
							}
						});
					}
				}
			},
			initBadge() {
				userClient.findAppBadge().then(res => {
					// #ifdef APP-PLUS
					console.log(res.data.totalCount)
					plus.runtime.setBadgeNumber(res.data.totalCount, { title: '', content: '' });
					// plus.runtime.setBadgeNumber(res.data.totalCount);
					// #endif
				})
			},
			/* 小米同意获取定位 */
			xiaomidialogConfirm() {
				// // console.log(1)
				this.initLocation()
			},
			toggleTizhi(type) {
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				/* this.$refs.tzSearchDialog.open(type) */
				uni.navigateTo({
					url: '/pages/tabBar/home/shopTypeSelect'
				})
			},
			closeTzPop() {
				this.$refs.tzSearchDialog.close()
			},
			handletouchstart() {
				// // console.log('触摸~')
				// #ifdef H5
				this.specClass = 'show';
				// #endif
				// #ifdef APP-NVUE
				var gwcE1 = this.$refs.gwc;
				animation.transition(gwcE1, {
					styles: {
						transform: 'translateX(36px)',
						// transformOrigin: 'center center'
					},
					duration: 600, //ms
					timingFunction: 'ease',
					delay: 0 //ms
				}, () => {
					// uni.showToast({
					// 	title: 'finished',
					// 	icon: 'none'
					// });
				})
				// #endif
			},
			handletouchcancel() {
				// // console.log('手指离开~')
				this.handletouchend();
			},
			handletouchend() {
				// // console.log('手指离开~')
				// #ifdef H5
				setTimeout(() => {
					this.specClass = 'hide';
				}, 2000);
				// #endif
				// #ifdef APP-NVUE
				var gwcE1 = this.$refs.gwc;
				animation.transition(gwcE1, {
					styles: {
						transform: 'translateX(0)',
						// transformOrigin: 'center center'
					},
					duration: 600, //ms
					timingFunction: 'ease',
					delay: 2000 //ms
				}, () => {
					// uni.showToast({
					// 	title: 'finished',
					// 	icon: 'none'
					// });
				})
				// #endif
			},
			// 筛选
			filterItem(item) {
				// this.isLoading2 = true;
				// // console.log(item);
				for (var i = 0; i < this.filterData.length; i++) {
					if (this.filterData[i].id !== item.id) {
						this.filterData[i].state = false
					}
				};
				item.state = !item.state;
				this.listPortForm.sortType = item.state ? item.id : 1;
				this.listPortForm.pageNum = 1;
				let pageNum = this.listPortForm.pageNum;
				let pageSize = this.listPortForm.pageSize;
				let searchValue = this.listPortForm.searchValue;
				let shopTypeId = this.listPortForm.shopTypeId;
				let latitude = this.listPortForm.latitude;
				let longitude = this.listPortForm.longitude;
				let sortType = this.listPortForm.sortType;
				let nutritionValue = this.listPortForm.nutritionValue;

				uni.request({
					url: returnIP() + 'kitchen/shop/shopList?pageNum=' + pageNum + '&pageSize=' +
						pageSize + '&searchValue=' + searchValue + '&shopTypeId=' + shopTypeId + '&latitude=' +
						latitude + '&longitude=' + longitude + '&sortType=' + sortType + '&nutritionValue=' +
						nutritionValue,

					success: (res) => {
						// console.log(res.data);
						if (res.data.code == 200) {
							// this.isLoading2 = false;
							this.shopList = res.data.rows;
							this.shopTotal = res.data.total;
						} else {
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							});
						}
					}
				});
				// this.filterData
			},
			// 测试
			// handle(type) {
			// 	this.show = !this.show
			// },
			gotoIndex(searchValue) {
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				uni.navigateTo({
					url: '/pages/search/search?search=' + searchValue,
					animationType: 'fade-in'
					// animationDuration: 200
				});
			},
			gotoOptions(index, item) {
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				switch (index) {
					case 0:
						uni.navigateTo({
							url: '../../fineFood/fine-food?ID=' + index + '&typeid=' + item.id
						});
						break;
					case 1:
						uni.navigateTo({
							url: '../../preparedFood/prepared-food?ID=' + index + '&typeid=' + item.id
						});
						break;
					case 2:
						uni.navigateTo({
							url: '../../vegetarianDiet/vegetarian-diet?ID=' + index + '&typeid=' + item.id
						});
						break;
					default:
						uni.navigateTo({
							url: '../../sweetDrinks/sweet-drinks?ID=' + index + '&typeid=' + item.id
						});
				}

			},
			gotoOptions2(index, item) {
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				switch (index) {
					case 0:
						uni.navigateTo({
							url: '../../orderSeat/order-seat?ID=' + (index + 4)
						});
						break;
					case 1:
						uni.navigateTo({
							url: '../../hotRecipes/hot-recipes?ID=' + (index + 4)
						});
						break;
					case 2:
						uni.navigateTo({
							url: '../../merchantsDoself/merchants-doself?ID=' + (index + 4)
						});
						// uni.navigateTo({
						// 	url: '../light/light'
						// })
						break;
					default:
						uni.navigateTo({
							url: '../../pregnancyFood/pregnancy-food?ID=' + (index + 4)
						});
				}

			},
			gotoShopCar() {
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				uni.navigateTo({
					// url: '../../shopCar/shop-car'
				});
			},
			// 获取广告轮播图
			getBannerList() {
				uni.request({
					url: returnIP() + 'kitchen/bannerInfo/list',

					success: (res) => {
						// // console.log(res.data);
						if (res.data.code == 200) {
							this.isLoading1 = false;
							// // console.log(res.data.rows);
							this.bannerData = res.data.rows
						} else {
							// uni.hideLoading();
							// // console.log(res.msg);
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							});
						}
					}
				});
			},
			toAdvert(item) {
				// // console.log(item.type)
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				}
				if (item.type == 1) {
					uni.navigateTo({
						url: '../../orderForm/redEnvelope/get-envelope'
					})
				} else {
					uni.navigateTo({
						url: '../../imageText/image-text?id=' + item.id
					})
				}
			},
			// 获取热搜
			findHotSearch(pageNum, pageSize) {
				if (!uni.getStorageSync('token_key')) return;
				search.findHotSearch(pageNum, pageSize).then(res => {
					// // console.log(res)
					if (res.code == 200) {
						this.historyData = res.rows;
						this.historyDataOne = res.rows[0].searchValue;
						// // console.log(this.historyDataOne.searchValue)
					} else {
						// uni.hideLoading();
						// // console.log(res.msg)
						uni.showToast({
							title: res.msg,
							icon: 'none'
						});
					}

				}).catch(err => {
					// uni.hideLoading();
					uni.showToast({
						title: err.msg,
						icon: 'none'
					});
				});
			},
			// 获取商家列表
			getShopList() {
				let pageNum = this.listPortForm.pageNum;
				let pageSize = this.listPortForm.pageSize;
				let searchValue = this.listPortForm.searchValue;
				let shopTypeId = this.listPortForm.shopTypeId;

				let latitude = this.listPortForm.latitude;
				let longitude = this.listPortForm.longitude;
				let sortType = this.listPortForm.sortType;
				let nutritionValue = this.listPortForm.nutritionValue;
				console.log(this.listPortForm)
				uni.request({
					url: returnIP() + 'kitchen/shop/shopList?pageNum=' + pageNum + '&pageSize=' +
						pageSize + '&searchValue=' + searchValue + '&shopTypeId=' + shopTypeId + '&latitude=' +
						latitude + '&longitude=' + longitude + '&sortType=' + sortType + '&nutritionValue=' +
						nutritionValue,
					success: (res) => {
						// console.log(res.data);
						if (res.data.code == 200) {
							this.isLoading2 = false;
							// // console.log(res.total)
							// // console.log(res.rows)
							this.shopList = this.shopList.concat(res.data.rows);
							this.shopTotal = res.data.total;
							// // console.log(this.shopList)
						} else {
							// uni.hideLoading();
							// // console.log(res.msg);
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							});
						}
					}
				});

				// shop.getShopList(pageNum, pageSize, searchValue, shopTypeId).then(res => {
				// 	// // console.log(res)
				// 	if (res.code == 200) {
				// 		// // console.log(res.total)
				// 		// // console.log(res.rows)
				// 		this.shopList = this.shopList.concat(res.rows);
				// 		this.shopTotal = res.total;
				// 		// // console.log(this.shopList)
				// 	} else if (res.code == 401) {
				// 		this.returnMsg = res.msg + '，请重新登录';
				// 		this.dialogToggle();
				// 	} else {
				// 		// uni.hideLoading();
				// 		// // console.log(res.msg);
				// 		uni.showToast({
				// 			title: res.msg,
				// 			icon: 'none'
				// 		});
				// 	}
				// }).catch(err => {
				// 	// uni.hideLoading();
				// 	uni.showToast({
				// 		title: err.msg,
				// 		icon: 'none'
				// 	});
				// });

			},
			initLocation() {
				let _this = this;
				uni.getLocation({
					type: 'gcj02', // 谷歌地图使用 wgs84 坐标，其他地图使用 gcj02 坐标
					success: (res) => {
						if (res.errMsg == "getLocation:ok") {
							// this.setMap(res)
							// // console.log(res)
							_this.listPortForm.longitude = res.longitude;
							_this.listPortForm.latitude = res.latitude;
							// // console.log(_this.listPortForm);
							// 当前位置经纬度存储
							let myLocation = {};
							myLocation.longitude = res.longitude;
							myLocation.latitude = res.latitude;
							_this.findHotSearch(1, 6);
							// _this.getShopList();
							var point = new plus.maps.Point(res.longitude, res.latitude);
							plus.maps.Map.reverseGeocode(
								point, {},
								function(event) {
									// // console.log(event.address)
									_this.myLocation = event.address;
									myLocation.address = event.address;
									uni.setStorageSync('location_key', myLocation);
									// var address = event.address; // 转换后的地理位置
									// // var point = event.coord; // 转换后的坐标信息
									// // var coordType = event.coordType; // 转换后的坐标系类型
									// // // console.log(address, 'address');
									// var reg = /.+?(省|市|自治区|自治州|县|区)/g;
									// // // console.log(address.match(reg));
									// _this.osForm.areaName = address.match(reg).toString().split(",")[0] + address.match(reg).toString().split(",")[1] + address.match(reg).toString().split(",")[2]
								},
								function(e) {}
							);
						}
					}
				});
			},
			chooseLocation() {
				// let _this = this;
				if (!uni.getStorageSync('token_key')) {
					uni.navigateTo({
						url: '/pages/login/login',
					});
					return;
				};
				uni.navigateTo({
					url: '../../myAddress/my-address?from=home'
				});
				// ------- 点击地址Item, 获取 地址信息：（经度，纬度，名称） navbackto返回修改当前页面data值：-----------
				// ------- _this.listPortForm.longitude,  _this.listPortForm.latitude, _this.myLocation, 更新页面（调getShopList接口）  -------
				// ------- 	// 存储经纬度
				// let myLocation = {};
				// myLocation.longitude = res.longitude;
				// myLocation.latitude = res.latitude;
				// uni.setStorageSync('location_key', myLocation); 

				// ===================================== 分割线 ===============================================
				// let _this = this;
				// uni.chooseLocation({
				// 	success: (res) => {
				// 		_this.listPortForm.longitude = res.longitude;
				// 		_this.listPortForm.latitude = res.latitude;
				// 		// 当前位置经纬度存储
				// 		let myLocation = {};
				// 		myLocation.longitude = res.longitude;
				// 		myLocation.latitude = res.latitude;
				// 		uni.setStorageSync('location_key', myLocation);
				// 		_this.getShopList();
				// 		var point = new plus.maps.Point(res.longitude, res.latitude);
				// 		plus.maps.Map.reverseGeocode(
				// 			point, {},
				// 			function(event) {
				// 				_this.myLocation = event.address;
				// 				// // console.log(_this.myLocation)
				// 			},
				// 			function(e) {}
				// 		);
				// 	}
				// })
			},
			dialogToggle() {
				this.$refs.alertDialog.open()
			},
			dialogConfirm() {
				uni.removeStorageSync('token_key');
				uni.navigateTo({
					url: '../../login/login'
				})
			},
			dialogClose() {
				// // console.log('点击关闭')
			},
			test() {
				// uni.switchTab({
				// 	url: '/pages/tabBar/order/order',
				// 	success: function() {
				// 		let pages = getCurrentPages();  //获取跳转的所有页面
				// 		// // console.log(pages[0].oftenBuyList)
				// 		pages[0].oftenBuyList()
				// 	}
				// });
			},
			initCid() {
				if (!uni.getStorageSync('token_key')) return;
				// uni-app客户端获取push客户端标记
				uni.getPushClientId({
					success: (res) => {
						let push_clientid = res.cid
						// console.log('客户端推送标识:', push_clientid)
						userClient.addUserClient({
							cid: push_clientid
						}).then((res) => {
							// console.log(res)
						})
					},
					fail(err) {
						// console.log(err)
					}
				})
			},
			// 获取适用体质列表
			getConstitutionIngredients() {
				if (!uni.getStorageSync('token_key')) return;
				shop.getConstitutionIngredients().then(res => {
					// // console.log(res)
					if (res.code == 200) {
						// // console.log(res)
						this.tzList = this.tzList.concat(res.rows);
					} else {
						// uni.hideLoading();
						// // console.log(res.msg)
						uni.showToast({
							title: res.msg,
							icon: 'none'
						});
					}

				}).catch(err => {
					// uni.hideLoading();
					uni.showToast({
						title: err.msg,
						icon: 'none'
					});
				});
			},
			onTzItem(item) {
				// // console.log(item.constitution)
				for (var i = 0; i < this.tzList.length; i++) {
					this.tzList[i].tmp_flag = false
				};
				item.tmp_flag = true;
				this.listPortForm.pageNum = 1;
				if (item.constitution == '全部') {
					this.listPortForm.nutritionValue = "";
				} else {
					this.listPortForm.nutritionValue = item.constitution;
				}
				let pageNum = this.listPortForm.pageNum;
				let pageSize = this.listPortForm.pageSize;
				let searchValue = this.listPortForm.searchValue;
				let shopTypeId = this.listPortForm.shopTypeId;
				let latitude = this.listPortForm.latitude;
				let longitude = this.listPortForm.longitude;
				let sortType = this.listPortForm.sortType;
				let nutritionValue = this.listPortForm.nutritionValue;
				uni.request({
					url: returnIP() + 'kitchen/shop/shopList?pageNum=' + pageNum + '&pageSize=' +
						pageSize + '&searchValue=' + searchValue + '&shopTypeId=' + shopTypeId + '&latitude=' +
						latitude + '&longitude=' + longitude + '&sortType=' + sortType + '&nutritionValue=' +
						nutritionValue,

					success: (res) => {
						if (res.data.code == 200) {
							this.shopList = res.data.rows;
							this.shopTotal = res.data.total;
							this.$refs.tzSearchDialog.close();
						} else {
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							});
						}
					}
				});
			}
		},
		onPageScroll(e) {
			this.scrollTop = e.scrollTop;
			if (this.scrollTop < 70) {
				this.show = false
			} else if (this.scrollTop >= 70) {
				this.show = true
			} else {
				this.show = true
			}

			// if(this.scrollTop > 500) {
			// 	this.show2 = true
			// }else {
			// 	this.show2 = false
			// }
			//获取距离顶部距离
			// const scrollTop = res.scrollTop;
			// if (scrollTop >= 0) {
			// 导航条颜色透明渐变
			// if (scrollTop <= 20) {
			// 	this.opacityNum = 0
			// } else if (20 < scrollTop && scrollTop <= 100) {
			// 	this.opacityNum = scrollTop / 100
			// } else if (scrollTop > 100) {
			// 	this.opacityNum = 1
			// }
			// }
			// // console.log(this.scrollTop)
		},
		onReachBottom() {
			// // console.log('触底啦~')
			if (this.shopList.length >= this.shopTotal) return;
			this.listPortForm.pageNum++;
			this.getShopList();
		},
		onLoad() {
			// uni.removeStorageSync('token_key');
			console.log('onload==> 20230306');
			let that = this;
			that.getBannerList();
			that.getShopList();
			// #ifdef APP-PLUS
			plus.runtime.getProperty(plus.runtime.appid, function(inf) {
				console.log('inf.versionCode==>', inf.versionCode);
				that.checkNewVersion(inf.versionCode);
			});
			// #endif
			// console.log('======Home Onload');
			// this.$refs.xiaomiPopup.open()
			// this.$refs.alertDialog.open()
		},
		onShow() {
			this.getUser();
		},
	}

</script>

<style>
	@import '../../../common/uni-nvue.css';

	.isBottom {
		/* text-align: center; */
		position: relative;
		margin-bottom: 14rpx;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.isBottom-text {
		font-size: 24rpx;
		color: rgb(186, 186, 186);
		text-align: center;
		margin: 0 20rpx;
	}

	.isBottom-leftLine {
		width: 160rpx;
		height: 4rpx;
		background: #e5e5e5;
	}

	.isBottom-rightLine {
		width: 160rpx;
		height: 4rpx;
		background: #e5e5e5;
	}

	.bdjg-gouwuche {
		width: 118rpx;
		height: 118rpx;
		border-radius: 59rpx;
		position: fixed;
		z-index: 10;
		/* #ifdef APP-PLUS */
		bottom: 20rpx;
		/* #endif */
		/* #ifdef H5 */
		bottom: 120rpx;
		/* #endif */
		right: 26rpx;
	}

	.show {
		animation: showLayer 0.2s linear both;
	}

	.hide {
		animation: hideLayer 0.2s linear both;
	}

	@keyframes showLayer {
		0% {
			transform: translateX(0%);
		}

		100% {
			transform: translateX(80rpx);
		}
	}

	@keyframes hideLayer {
		0% {
			transform: translateX(80rpx);
		}

		100% {
			transform: translateX(0);
		}
	}

	.gouwuche-img {
		width: 118rpx;
		height: 118rpx;
	}

	.sticky-box {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		position: -webkit-sticky;
		/* #endif */
		position: sticky;
		/* top: var(--window-top); */
		/* top: calc(var(--window-top));    增加宽度 */
		z-index: 99;
	}

	.home-container {
		/* height: 100%; */
		padding-top: 106rpx;
	}

	.bcg {
		width: 750rpx;
		height: 780rpx;
		position: absolute;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
		/* z-index: 999 */
	}

	.module_1 {
		padding-left: 22rpx;
		padding-right: 22rpx;
		/* z-index: 9999; */
	}

	.position_ {
		/* height: 44rpx; */
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.position_right {
		flex-direction: row;
		align-items: center;
	}

	.position-text {
		font-size: 28rpx;
		font-weight: 500;
		width: 300rpx;
		lines: 1;
		text-overflow: ellipsis;
	}

	.search_ {
		height: 64rpx;
		background: #ffffff;
		margin-top: 28rpx;
		margin-bottom: 10rpx;
		border-radius: 32rpx;
		flex-direction: row;
		align-items: center;
		padding-top: 12rpx;
		padding-bottom: 12rpx;
		border: 2rpx solid #F2C050;
		position: relative;
	}

	/* .search-btn {
		position: absolute;
		right: -2rpx;
		
		width: 120rpx;
		height: 62rpx;
		
		background: #F9DA87;
		display: flex;
		justify-content: center;
		align-items: center;
		border-radius: 60rpx;
	}
	
	.search-btn-text {
		font-size: 30rpx;
		font-weight: 600;
	} */

	.search-text {
		color: #808080;
		font-size: 28rpx;
	}

	.history-lists {
		flex-direction: row;
	}

	.lists-item {
		/* height: 40rpx; */
		/* line-height: 40rpx; */
		/* align-items: center; */
		/* padding-top: 6rpx; */
		/* padding-bottom: 6rpx; */
		padding-left: 14rpx;
		padding-right: 14rpx;
		margin-right: 16rpx;
		/* background-color: rgba(255, 255, 255, 0.5176470588235295); */
		background-color: #F8F8F8;
		border-radius: 20rpx;
	}

	.lists-item-text {
		height: 36rpx;
		line-height: 36rpx;
		/* 安卓可能需要 */
		color: #000000;
		font-size: 20rpx;
		/* background-color: #007AFF; */
	}

	.banner_ {
		height: 286rpx;
		margin-top: 12rpx;
		margin-bottom: 14rpx
	}

	.banner_swiper {
		height: 286rpx
	}

	.module_2 {
		padding-top: 4rpx;
		/* padding-bottom: 40rpx; */
		padding-left: 56rpx;
		padding-right: 56rpx;
		border-radius: 40rpx 40rpx 0 0;
		background-color: #F5F5F5;
		/* border: 2rpx solid #F5F5F5; */
		/* z-index: 99 */
	}

	.types-Row1 {
		flex-direction: row;
		justify-content: space-between;
	}

	.type-Row2 {
		flex-direction: row;
		justify-content: space-between;
	}

	.types-item {
		/* margin-bottom: 40rpx; */
		align-items: center;
	}

	.types-item-text {
		text-align: center;
		color: #000000;
		font-size: 24rpx;
	}

	.module_3 {
		padding-left: 22rpx;
		padding-right: 88rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		background-color: #F5F5F5;
		/* padding-bottom: 12rpx; */
		padding-top: 28rpx;
		/* border-top: 2rpx solid #F5F5F5; */
		overflow: hidden;
		height: 80rpx;
		position: relative;
	}

	.filter-icon {
		position: absolute;
		right: 24rpx;
		top: 16rpx;
		flex-direction: row;
		align-items: center;
	}

	.filter_ {
		flex-direction: row;
	}

	.filter-item {
		height: 58rpx;
		padding: 0rpx 28rpx;
		background-color: #FEFFFF;
		margin-right: 22rpx;
		border-radius: 10rpx;
		margin-bottom: 20rpx;
	}

	.filter-item-active {
		/* background: linear-gradient(to right, #FFE471, #FCAD00) !important; */
		background: #FFE471 !important;
	}

	.filter-item-last {
		margin-right: 0 !important;
	}

	.filter-itemtext-active {
		color: #000000 !important;
	}

	.filter-item-text {
		color: #56575B;
		font-size: 24rpx;
		height: 58rpx;
		line-height: 58rpx;
	}

	.module_4 {
		padding-top: 12rpx;
		padding-left: 22rpx;
		padding-right: 22rpx;
	}

	.uni-popup__wrapper {}

	.tzSearch-content {
		width: 700rpx;
		height: 800rpx;
		position: relative;
		padding-top: 40rpx;
		border-radius: 12rpx;
		background-color: #ffffff;
	}

	.category-name {
		padding: 22rpx;
		text-align: center;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.tz-line {
		width: 44rpx;
		border-bottom: 2rpx solid grey;
	}

	.tz-close {
		width: 36rpx;
		position: absolute;
		right: 10rpx;
		top: 10rpx;
	}

	.tz-text {
		font-size: 28rpx;
		padding: 0 8rpx;
	}

	.tz-item {
		margin-right: 36rpx;
		margin-left: 12rpx;
		margin-bottom: 20rpx;
	}

	.tz-item-text {
		font-size: 30rpx;
		/* color: #338B61; */
		color: #999;
		font-weight: bold;
		width: 180rpx;
		height: 80rpx;
		line-height: 80rpx;
		background: #ffffff;
		/* border: 2rpx solid #338B61; */
		border: 2rpx solid #999;
		border-radius: 12rpx;
		/* display: flex; */
		/* justify-content: center; */
		/* align-items: center; */
		text-align: center;
	}

	.tz-item-text-a {
		color: #338B61 !important;
		border: 2rpx solid #338B61 !important;
	}

	.isLogin-float {
		background: rgba(0, 0, 0, 0.7);
		width: 750rpx;
		height: 100rpx;
		position: fixed;
		bottom: 0;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 0 22rpx;
		box-sizing: border-box;
	}

	.isLogin-float-text {
		color: #ffffff;
		font-size: 32rpx;
	}

	.login-btn {
		width: 160rpx;
		height: 60rpx;
		background: linear-gradient(to right, #F0C82D, #FFB000);
		border-radius: 10rpx;
		text-align: center;
		line-height: 60rpx;
		font-size: 28rpx;
	}
	
	.login-btn-text {
		text-align: center;
		line-height: 60rpx;
		font-size: 28rpx;
	}

	.popup-content {
		display: flex;
		flex-direction: column;
		width: 560rpx;
		height: 400rpx;
		border-radius: 24rpx;
		background-color: #FFFFFF;
		box-sizing: border-box;
		padding: 32rpx;
	}

	.popup-content-text {
		text-align: center;
	}

	.popup-content-tit {
		font-size: 40rpx;
		font-weight: 500;
		margin-bottom: 60rpx;
		margin-top: 20rpx;
	}

	.popup-content-cont {
		font-size: 32rpx;
		margin-bottom: 40rpx;
	}

	.ppopup-content-progress {
		font-size: 32rpx;
		margin-bottom: 30rpx;
		color: #10AEFF;
	}

</style>

